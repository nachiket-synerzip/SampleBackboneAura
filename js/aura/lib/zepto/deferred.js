// Generated by CoffeeScript 1.3.1
/*
 Simply Deferred - v.1.1.4
 (c) 2012 Sudhir Jonathan, contact.me@sudhirjonathan.com, MIT Licensed.
 Portions of this code are inspired and borrowed from Underscore.js (http://underscorejs.org/) (MIT License)
 */
(function () {
    var a, b, c, d, e, f, g, h, i, j, k, l, m = [].slice;
    b = "pending", d = "resolved", c = "rejected", h = function (a, b) {
        return a != null ? a.hasOwnProperty(b) : void 0
    }, j = function (a) {
        return h(a, "length") && h(a, "callee")
    }, g = function (a) {
        return j(a) ? g(Array.prototype.slice.call(a)) : Array.isArray(a) ? a.reduce(function (a, b) {
            return Array.isArray(b) ? a.concat(g(b)) : (a.push(b), a)
        }, []) : [a]
    }, e = function (a, b) {
        return a <= 0 ? b() : function () {
            if (--a < 1)return b.apply(this, arguments)
        }
    }, k = function (a, b) {
        return function () {
            var c;
            return c = [a].concat(Array.prototype.slice.call(arguments, 0)), b.apply(this, c)
        }
    }, f = function (a, b) {
        var c, d, e, f, h;
        f = g(a), h = [];
        for (d = 0, e = f.length; d < e; d++)c = f[d], h.push(c.apply(null, b));
        return h
    }, a = function () {
        var a, e, h, i, j, k;
        return k = b, i = [], j = [], a = [], h = {}, this.promise = function (e) {
            var l;
            return e = e || {}, e.state = function () {
                return k
            }, l = function (a, c) {
                return function () {
                    return k === b && c.push.apply(c, g(arguments)), a() && f(arguments, h), e
                }
            }, e.done = l(function () {
                return k === d
            }, i), e.fail = l(function () {
                return k === c
            }, j), e.always = l(function () {
                return k !== b
            }, a), e
        }, this.promise(this), e = function (c, d) {
            return function () {
                return k === b && (k = c, h = arguments, f([d, a], h)), this
            }
        }, this.resolve = e(d, i), this.reject = e(c, j), this
    }, l = function () {
        var b, c, d, f, h, i;
        f = new a, c = g(arguments), d = e(c.length, f.resolve);
        for (h = 0, i = c.length; h < i; h++)b = c[h], b.done(d);
        return f.promise()
    }, i = function (b) {
        return b.Deferred = function () {
            return new a
        }, b.ajax = k(b.ajax, function (b, c) {
            var d, e;
            return c == null && (c = {}), e = new a, d = function (a, b) {
                return k(a, function () {
                    var a, c;
                    return c = arguments[0], a = 2 <= arguments.length ? m.call(arguments, 1) : [], c && c.apply(null, a), b.apply(null, a)
                })
            }, c.success = d(c.success, e.resolve), c.error = d(c.error, e.reject), b(c), e.promise()
        }), b.when = l
    }, typeof exports != "undefined" ? (exports.Deferred = function () {
        return new a
    }, exports.when = l, exports.installInto = i) : (this.Deferred = function () {
        return new a
    }, this.Deferred.when = l, this.Deferred.installInto = i)
}).call(this);